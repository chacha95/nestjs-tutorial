version: '3.8'

services:
  # app:
  #   container_name: local-app
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes:
  #     - .:/app
  #   ports:
  #     - 3000:3000
  #   command: yarn run start:dev
  #   links:
  #     - redis
  #   env_file:
  #     - .env
  #   networks:
  #     local-network:
  #   depends_on: [ 'redis', 'kibana' ]

  postgres:
    image: postgres
    restart: always
    container_name: local-postgres
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - ./pgdata:/var/lib/postgresql
    ports:
      - ${POSTGRES_PORT}:5432
    env_file:
      - .env
    networks:
      local-network:

  zookeeper:
    container_name: local-zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - ${ZOOKEEPER_PORT}:2181
    env_file:
      - .env
    networks:
      local-network:

    kafka:
    container_name: local-kafka
    image: confluentinc/cp-kafka:latest
    env_file:
      - .env
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:${KAFKA_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      local-network:

networks:
  local-network:
